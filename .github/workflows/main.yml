name: Build and Publish JAR

on:
  push:
    tags:
      - 'v*' # Trigger workflow only when a tag like v1.0.0 is pushed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JDK
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17' # Use the JDK version compatible with your project
        distribution: 'temurin'

    # Step 3: Cache Gradle dependencies
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # Step 4: Build the JAR file
    - name: Build JAR
      run: ./gradlew clean build

    # Step 5: Create a GitHub Release
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }} # Use the tag name as the release tag
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    # Step 6: Upload JAR to Release
    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/libs/your-app.jar # Path to your JAR file
        asset_name: your-app.jar # Name of the asset in the release
        asset_content_type: application/java-archive
